---
// components
import NavLink from "@components/Nav/NavLink.astro";
import NavDropdown from "@components/Nav/NavDropdown/NavDropdown.astro";
import MobileNav from "@components/Nav/MobileNav/MobileNav.astro";
import SiteLogo from "@components/SiteLogo/SiteLogo.astro";
import Button from "@components/Button/Button.astro";

// data
import navData from "@config/navData.json";
// console.log(JSON.stringify(navData, null, 2));

interface Props {
	rest?: any; // catch-all for any additional parameters, such as "aria-label"
}
---

<div
	id="nav__container"
	class="fixed top-0 left-0 z-30 flex w-full flex-col border-b border-b-transparent bg-transparent backdrop-blur transition-all duration-300"
>
	<div class="mx-auto flex w-full">
		<div class="site-container flex h-16 w-full items-center">
			<header class="flex w-full items-center gap-2">
				<!-- home button / image -->
				<div class="flex flex-auto justify-start">
					<SiteLogo />
				</div>

				<!-- desktop nav menu -->
				<div class="flex flex-auto justify-end">
					<nav class="hidden md:block">
						<ul class="flex h-fit items-center px-4">
							{
								// if dropdown exists, setup the dropdown, otherwise it is just a link
								navData.map((navItem) =>
									"dropdown" in navItem ? (
										// non-mobile dropdown menu
										<NavDropdown navItem={navItem} />
									) : (
										// normal nav link
										<NavLink {navItem} />
									),
								)
							}
						</ul>
					</nav>

					<!-- mobile nav menu, only load on small screens where it is visible -->
					<div class="md:hidden">
						<MobileNav />
					</div>
				</div>
			</header>
		</div>
	</div>
</div>

<style>
	@import "tailwindcss/theme" theme(reference);
	@import "@/styles/tailwind-theme.css" theme(reference);

	.navbar--scrolled {
		@apply border-b-base-300/60 bg-base-100/60 backdrop-blur;
	}

	.navbar--initial {
		@apply border-b-transparent bg-transparent;
	}
</style>

<script>
	let navbar: HTMLElement | null;

	function scrollHandler() {
		if (navbar) {
			if (window.scrollY > 50) {
				// if we have scrolled down the page a bit, add a frosted-glass look to the navbar
				navbar.classList.add("navbar--scrolled");
				navbar.classList.remove("navbar--initial");
			} else {
				navbar.classList.remove("navbar--scrolled");
				navbar.classList.add("navbar--initial");
			}
		}
	}

	function initNav() {
		navbar = document.getElementById("nav__container");
		window.addEventListener("scroll", scrollHandler, { passive: true });
	}

	// runs on initial page load
	initNav();

	// runs on view transitions navigation. Not needed if item has "transition:persist"
	document.addEventListener("astro:after-swap", initNav);
</script>
